version: '3.3'

services:

    node:
        build:
          context: ./node
        environment: 
          - NODE_ENV=${NODE_ENV}
        volumes:
          - ${APPLICATION}:/home/node/app
        expose:
          - ${NODE_PORT}
        command: "npm start"
        tty: true
        networks:
          - frontend
          - backend
        links:
          - mongo

    mysql:
        build:
            context: ./mysql
            args:
                - MYSQL_DATABASE=${MYSQL_DATABASE}
                - MYSQL_USER=${MYSQL_USER}
                - MYSQL_PASSWORD=${MYSQL_PASSWORD}
                - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
        volumes:
            - ${DATA_SAVE_PATH}/mysql/:/var/lib/mysql
        expose:
            - ${MYSQL_PORT}

    postgresql:
        build:
            context: ./postgresql
            args:
                - POSTGRES_USER=${POSTGRES_USER}
                - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
                - POSTGRES_DB=${POSTGRES_DB}
        volumes:
            - ${DATA_SAVE_PATH}/postgresql/:/var/lib/postgresql
        expose:
            - ${POSTGRES_PORT}

    mongo:
        build: ./mongo
        expose:
            - ${MONGODB_PORT}
        volumes:
            - ${DATA_SAVE_PATH}/mongo/:/var/lib/mongodb
        networks:
            - backend

    nginx:
        build:
            context: ./nginx
            args:
                - WEB_REVERSE_PROXY_PORT=${WEB_REVERSE_PROXY_PORT}
                - WEB_SSL=${WEB_SSL}
                - SELF_SIGNED=${SELF_SIGNED}
                - NO_DEFAULT=false
        volumes:
            - ${NGINX_HOST_LOG_PATH}:/var/log/nginx
            - ${NGINX_SITES_PATH}:/etc/nginx/sites-available
            - ./certbot/certs/:/var/certs
        ports:
            - ${NGINX_HOST_HTTP_PORT}
            - ${NGINX_HOST_HTTPS_PORT}
        environment:
            VIRTUAL_HOST: ${MAIN_DOMAIN}
        tty: true
        networks:
            - frontend
            - backend
        depends_on: 
            - node

    apache:
        build:
            context: ./apache
            args:
                - WEB_REVERSE_PROXY_PORT=${WEB_REVERSE_PROXY_PORT}
                - WEB_SSL=${WEB_SSL}
                - SELF_SIGNED=${SELF_SIGNED}
                - NO_DEFAULT=false
        volumes:
            - ${DATA_SAVE_PATH}/logs/apache/:/usr/local/apache2/logs
            - ./certbot/certs/:/var/certs
        ports:
            - "80:80"
            - "443:443"
        tty: true

    certbot:
        build:
            context: ./certbot
        links:
            - apache
            - nginx
        volumes:
          - ./certbot/letsencrypt/:/var/www/letsencrypt
          - ./certbot/certs/:/var/certs

    rabbitmq:
        build:
            context: ./rabbitmq
            args:
                - MANAGEMENT=false
                - FEDERATION=false
                - RABBITMQ_DEFAULT_USER=guest
                - RABBITMQ_DEFAULT_PASS=guest
        expose:
            - "5672"

    workspace:
        build:
            context: ./workspace
            args:
                - NODE_VERSION=latest
                - TZ=UTC
        links:
            - nginx
        volumes:
            - ../:/opt/app

    memcached:
        build:
            context: ./memcached
        expose:
            - "11211"

    redis:
        build:
            context: ./redis
        expose:
            - "6379"
        volumes:
            - ./data/redis:/data

    rethinkdb:
        build:
            context: ./rethinkdb
        volumes:
            - ./data/rethinkdb:/data
        expose:
            - "28015"
            - "29015"
        ports:
            - "28080:8080"

networks:
  frontend:
    external:
       name: nginxproxy_default
  backend:
    driver: "bridge"

volumes:
  mongo:
    driver: "local"
  node: 
    driver: "local"
